// if updates aren't showing locally. run jobs and kill%1
var el = x => document.getElementById(x);

function showPicker() {
  el("file-input").click();
}

function showPicked(input) {
  el("upload-label").innerHTML = input.files[0].name;
  var reader = new FileReader();
  reader.onload = function(e) {
    el("image-picked").src = e.target.result;
    el("image-picked").className = "";
  };
  reader.readAsDataURL(input.files[0]);
}

function show_button(input){
  var x = document.getElementById(input)
         if(x.style.display == 'none'){
          x.style.display = "block";
  }
}


// this is the function got called up when the "analyze" button is clicked. 
// Run the model to classify the object in the images uploaded by the user.
// Then show the "right" and "wrong" button for users to send feedback on the result generated by model
function analyze() {
  var uploadFiles = el("file-input").files;
  var file = uploadFiles[0]

  if (uploadFiles.length !== 1){
    alert("Please select a file to analyze!");
  } 

  el("analyze-button").innerHTML = "Analyzing...";   //show "Analyzing..." when the model is analyzing the image
  var xhr = new XMLHttpRequest();
  var loc = window.location;
  xhr.open("POST", `${loc.protocol}//${loc.hostname}:${loc.port}/analyze`,
    true);
  xhr.onerror = function() {
    alert(xhr.responseText);
    el("analyze-button").innerHTML = "Analyze";
  };
  xhr.onload = function(e) {
    if (this.readyState === 4) {
      var response = JSON.parse(e.target.responseText);
      el("result-label").innerHTML = `Result = ${response["result"]}`;
      show_button('right');
      show_button('wrong');
      var temp = response['result'];
      if(temp.includes('Recyclable')){
        temp = (temp.split('(')[1]).split(')')[0];
      }
      var selectobject = document.getElementById('select-menu')
      for (var i=0; i<selectobject.length; i++){
        if (selectobject.options[i].value ==  temp)
           selectobject.remove(i);
        }
    }
    el("analyze-button").innerHTML = "Analyze";
  };

  var fileData = new FormData();
  fileData.append("file", file)
  xhr.send(fileData);
}

// this is the function to submit the image with the result generated by our model
// when user clicks "right" button 
function submit(){
  var myStringArray = ["Cardboard", "E-Waste", 'Glass', 'Paper', 'Metal', 'Plastic','Trash'];
  var arrayLength = myStringArray.length;
  var pred = el('result-label').textContent
  if(pred.includes('Recyclable')){
    pred = (pred.split('(')[1]).split(')')[0];
  }
  else{
    pred = pred.split('Result =')[1];
  }
  for (var i = 0; i < arrayLength; i++) {
      if(el('select-menu').value === myStringArray[i]){
        window.confirm("Are you sure the item is " + pred);
      }
  }
  var xhr = new XMLHttpRequest();
  var loc = window.location;
  xhr.open("POST", `${loc.protocol}//${loc.hostname}:${loc.port}/submit`,
    true);

    xhr.onerror = function() {
      alert(xhr.responseText);
    };
    xhr.onload = function(e) {
      if (this.readyState === 4) {
      }
      el("right-button").innerHTML = "Right";
      location.href='/';
    };
  var uploadFiles = el("file-input").files;
  el("right-button").innerHTML = "Submitting...";
  var fileData = new FormData();
  fileData.append(pred, uploadFiles[0]);
  fileData.append('pre', pred)
  xhr.send(fileData);
}


// this is the function to submit the image with right trash categories that user choose
// from the select menu 
// after user clicks "wrong" button if the model gives a wrong result
function submit2(){
  var prediction = el('result-label').textContent
  if(prediction.includes('Recyclable')){
    prediction = (prediction.split('(')[1]).split(')')[0];
  }
  else{
    prediction = prediction.split('Result =')[1];
  }  
  var uploadFiles = el("file-input").files;
  el("submit-button1").innerHTML = "Submitting...";
  var pred = el('select-menu').value
  var xhr = new XMLHttpRequest();
  var loc = window.location;
  xhr.open("POST", `${loc.protocol}//${loc.hostname}:${loc.port}/submit`,
  true);

  xhr.onerror = function() {
    alert(xhr.responseText);
  };
  xhr.onload = function(e) {
    if (this.readyState === 4) {
    }
    el("submit-button1").innerHTML = "Submit";
    location.href='/';
  };

  var fileData = new FormData();
  fileData.append(pred, uploadFiles[0]);
  fileData.append('pre', prediction)
  xhr.send(fileData);
}
